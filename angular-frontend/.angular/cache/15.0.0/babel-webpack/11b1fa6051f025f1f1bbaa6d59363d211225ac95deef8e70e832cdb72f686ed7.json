{"ast":null,"code":"import { Employee } from '../../models/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\n//generated from the command ng g c update-employee in the app folder\nexport class UpdateEmployeeComponent {\n  constructor(employeeService, route, router) {\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  ngOnInit() {\n    /**\r\n    ActivatedRoute :\r\n    Provides access to information about a route associated with a component that is loaded in an outlet.\r\n    Use to traverse the RouterState tree and extract information from nodes.\r\n    */\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  static #_ = this.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n    return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateEmployeeComponent,\n    selectors: [[\"app-update-employee\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"card\", \"col-md-6\", \"offset-md-3\", \"offset-md-3\"], [1, \"text-center\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function UpdateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 0)(3, \"h3\", 2);\n        i0.ɵɵtext(4, \"Update Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateEmployeeComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\");\n        i0.ɵɵtext(10, \" First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.employee.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\");\n        i0.ɵɵtext(14, \" Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.employee.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\");\n        i0.ɵɵtext(18, \" Email Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.employee.emailId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"button\", 9);\n        i0.ɵɵtext(22, \"Submit\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,uBAAuB;;;;;AAIhD;AAOA,OAAM,MAAOC,uBAAuB;EAInCC,YAAoBC,eAAgC,EAC3CC,KAAqB,EACrBC,MAAc;IAFH,oBAAe,GAAfF,eAAe;IAC1B,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAHf,aAAQ,GAAa,IAAIL,QAAQ,EAAE;EAGR;EAE3BM,QAAQ;IAET;;;;;IAKE,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAE1C,IAAI,CAACN,eAAe,CAACO,eAAe,CAAC,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MAC9D,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACrB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;EAEAG,QAAQ;IACP,IAAI,CAACd,eAAe,CAACe,cAAc,CAAC,IAAI,CAACX,EAAE,EAAE,IAAI,CAACM,QAAQ,CAAC,CAACF,SAAS,CAACC,IAAI,IAAG;MAC5E,IAAI,CAACO,gBAAgB,EAAE;IACxB,CAAC,EACEL,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;EAEAK,gBAAgB;IACf,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACrC;EAAC;qBA/BWnB,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAAoB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCbpCC,8BAAiB;QAGUA,+BAAe;QAAAA,iBAAK;QAC5CA,qBAAM;QACNA,8BAAuB;QAChBA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAE5BD,8BAAwB;QACfA,4BAAU;QAAAA,iBAAQ;QAC1BA,iCACkE;QAAlDA;UAAA;QAAA,EAAgC;QADhDA,iBACkE;QAGnEA,+BAAwB;QACfA,2BAAS;QAAAA,iBAAQ;QACzBA,iCAC+D;QAAhDA;UAAA;QAAA,EAA+B;QAD9CA,iBAC+D;QAGhEA,+BAAwB;QACfA,0BAAQ;QAAAA,iBAAQ;QACxBA,iCAC4D;QAA9CA;UAAA;QAAA,EAA8B;QAD5CA,iBAC4D;QAE7DA,sBAAM;QACNA,kCAA8C;QAAAA,uBAAM;QAAAA,iBAAS;;;QAf5CA,gBAAgC;QAAhCA,gDAAgC;QAMjCA,eAA+B;QAA/BA,+CAA+B;QAMhCA,eAA8B;QAA9BA,8CAA8B","names":["Employee","UpdateEmployeeComponent","constructor","employeeService","route","router","ngOnInit","id","snapshot","params","getEmployeeById","subscribe","data","employee","error","console","log","onSubmit","updateEmployee","goToEmployeeList","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Dev\\Java\\angular+springboot\\angular-frontend\\src\\app\\components\\update-employee\\update-employee.component.ts","C:\\Dev\\Java\\angular+springboot\\angular-frontend\\src\\app\\components\\update-employee\\update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../services/employee.service';\nimport { Employee } from '../../models/employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n//generated from the command ng g c update-employee in the app folder\n\n@Component({\n\tselector: 'app-update-employee',\n\ttemplateUrl: './update-employee.component.html',\n\tstyleUrls: ['./update-employee.component.scss']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n\tid: number;\n\temployee: Employee = new Employee();\n\tconstructor(private employeeService: EmployeeService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router) { }\n\n\tngOnInit(): void {\n\n/**\nActivatedRoute : \nProvides access to information about a route associated with a component that is loaded in an outlet.\nUse to traverse the RouterState tree and extract information from nodes.\n*/\n\t\tthis.id = this.route.snapshot.params['id'];\n\n\t\tthis.employeeService.getEmployeeById(this.id).subscribe(data => {\n\t\t\tthis.employee = data;\n\t\t}, error => console.log(error));\n\t}\n\n\tonSubmit() {\n\t\tthis.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n\t\t\tthis.goToEmployeeList();\n\t\t}\n\t\t\t, error => console.log(error));\n\t}\n\n\tgoToEmployeeList() {\n\t\tthis.router.navigate(['/employees']);\n\t}\n}","<div class=\"row\">\n\t<div class=\"card col-md-6 offset-md-3 offset-md-3\">\n\t\t<div class=\"row\">\n\t\t\t<h3 class=\"text-center\">Update Employee</h3>\n\t\t\t<hr />\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<form (ngSubmit)=\"onSubmit()\">\n\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label> First Name</label> \n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\n\t\t\t\t\t\t\tid=\"firstName\" [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label> Last Name</label> \n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\n\t\t\t\t\t\t\tid=\"lastName\" [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label> Email Id</label> \n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\n\t\t\t\t\t\t\tid=\"emailId\" [(ngModel)]=\"employee.emailId\" name=\"emailId\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<button class=\"btn btn-success\" type=\"submit\">Submit</button>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}